name: stack-dev-ubuntu

networks:
  my-network-proxy:
    name: my-network-proxy
    external: true

volumes:
  tmp1:

services:
  ubuntu-dev:
    image: localhost/ubuntu
    restart: always
    configs:
      - source: custom_startup
        target: /dockerstartup/custom_startup.sh
        mode: 0555
      - source: install
        target: /dockerstartup/utils/install.sh
        mode: 0555
      - source: bashrc
        target: /home/kasm-user/.bashrc
        mode: 0555
    shm_size: 2gb
    security_opt:
      - apparmor=unconfined
      - seccomp=unconfined
    cap_add:
      - ALL
    networks:
      - my-network-proxy
    expose:
      - 6901
    environment:
      KASM_USER: "kasm-user"
      VNC_USER: kasm_user
      VNC_PW: password
      USER_DOCKER_HOST: dind-dev
      # DOCKER_HOST: tcp://docker:2376
      # DOCKER_HOST: unix://var/run/docker.sock
      # DOCKER_SOCK: unix://var/run/docker.sock
      DOCKER_TLS_VERIFY: 1
      DOCKER_TLS_CERTDIR: /certs
      DOCKER_CERT_PATH: /certs/client
      ROOTLESSKIT_STATE_DIR: /home/kasm-user/.docker/tmp
      XDG_RUNTIME_DIR: /home/kasm-user/.docker/run
      UB_IIT_SETTINGS_PATH: /home/kasm-user/tmp
      DOTNET_ROOT: /mnt/user-data/!apps/dotnet
      KASM_SVC_WEBCAM: 0
      KASM_SVC_PRINTER: 0
      KASM_SVC_AUDIO: 0
      KASM_SVC_AUDIO_INPUT: 0
      KASM_SVC_UPLOADS: 0
      KASM_SVC_GAMEPAD: 0
      PATH_ADD: /home/kasm-user/bin:/home/kasm-user/.dotnet/tools
    devices:
      - /dev/fuse:/dev/fuse
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/mnt-links/docker/dind-dev/certs:/certs:ro
      - /var/mnt-links/docker/dind-dev/var/run:/var/dind-dev-run
      - /var/mnt-links/docker/ubuntu/home/kasm-user:/home/kasm-user:rw
      - /var/mnt-links/docker/ubuntu/mnt/user-data:/mnt/user-data:rw
      - /var/mnt-links/media/share-local:/mnt/share-local:rw
      - /var/mnt-links/media/share-default-large:/mnt/share-default-large:rw
    cpu_shares: 128
    mem_limit: 8G
    labels:
      virtual.caddyfile: |
        http://ubuntu.dev.localhost {
          reverse_proxy ubuntu-dev:6901 {
            transport http {
              tls
              tls_insecure_skip_verify
            }
          }
        }
      virtual.homefile: |
        <div>
          <a class="shadow" href="http://ubuntu.dev.localhost">ubuntu.dev</a>
          <small>http://ubuntu.dev.localhost</small>
        </div>

  ubuntu-focal:
    build:
      dockerfile_inline: |
        FROM kasmweb/core-ubuntu-focal:1.16.0
        USER root
        RUN add-apt-repository universe -y
        RUN apt-get update
        RUN apt-get install -y sudo apt-utils dbus-user-session uidmap coreutils e2fsprogs cryptsetup kpartx nmap socat dialog
        RUN apt-get install -y git htop mc thunar-archive-plugin iputils-ping openssl
        RUN apt install -y usbutils pcsc-tools libengine-pkcs11-openssl opensc opensc-pkcs11 gnutls-bin
        RUN mkdir -p /etc/pkcs11/modules
        RUN echo "module: /usr/lib/libeTPkcs11.so" >> /etc/pkcs11/modules/eToken.module

        RUN echo 'kasm-user ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers.d/user
        RUN echo -n 'kasm-user:password' | chpasswd
        RUN passwd -d kasm-user

        RUN cat <<EOF >/home/kasm-default-profile/Desktop/install.sh
        #!/usr/bin/env bash
        set -ex
        sudo apt install ./safenetauthenticationclient_10.7.77_amd64.deb
        sudo pcscd -f
        EOF

        USER 1000
    restart: no
    privileged: true
    shm_size: 1gb
    security_opt:
      - apparmor=unconfined
      - seccomp=unconfined
    cap_add:
      - ALL
    sysctls:
      - kernel.unprivileged_userns_clone=1
      - fs.inotify.max_user_watches=524288
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_unprivileged_port_start=0
    networks:
      - my-network-proxy
    expose:
      - 6901
    environment:
      KASM_USER: "kasm-user"
      VNC_USER: kasm_user
      VNC_PW: password
      USER_DOCKER_HOST: dind-dev
      DOCKER_TLS_VERIFY: 1
      DOCKER_TLS_CERTDIR: /certs
      DOCKER_CERT_PATH: /certs/client
      ROOTLESSKIT_STATE_DIR: /home/kasm-user/.docker/tmp
      XDG_RUNTIME_DIR: /home/kasm-user/.docker/run
      UB_IIT_SETTINGS_PATH: /home/kasm-user/tmp
      DOTNET_ROOT: /mnt/user-data/!apps/dotnet
      KASM_SVC_WEBCAM: 0
      KASM_SVC_PRINTER: 0
      KASM_SVC_AUDIO: 0
      KASM_SVC_AUDIO_INPUT: 0
      KASM_SVC_UPLOADS: 0
      KASM_SVC_GAMEPAD: 0
      PATH_ADD: /home/kasm-user/bin:/home/kasm-user/.dotnet/tools
      UDEV: on
    devices:
      - /dev/fuse:/dev/fuse
      - /dev/usb:/dev/usb
      - /dev/bus/usb:/dev/bus/usb
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/mnt-links/docker/ubuntu-focal/home/kasm-user:/home/kasm-user:rw
      - /var/mnt-links/media/share-local:/mnt/share-local:rw
      - /var/mnt-links/media/share-default-large/remote-share:/mnt/share-default-large:rw
    labels:
      virtual.caddyfile: |
        http://ubuntu-focal.dev.localhost {
          reverse_proxy ubuntu-focal:6901 {
            transport http {
              tls
              tls_insecure_skip_verify
            }
          }
        }
      virtual.homefile: |
        <div>
          <a class="shadow" href="http://ubuntu-focal.dev.localhost">ubuntu-focal.dev</a>
          <small>http://ubuntu-focal.dev.localhost</small>
        </div>

configs:
  custom_startup:
    content: |
      #!/usr/bin/env bash
      set -ex
      /usr/bin/desktop_ready && xterm /dockerstartup/utils/docker-port-forward.sh

  install:
    content: |
      #!/usr/bin/env bash
      set -ex
      sudo usermod -a -G video kasm-user
      # sudo apt install -y ssh

  bashrc:
    content: |
      source $$STARTUPDIR/generate_container_user

      export NVM_DIR="$$HOME/.nvm"
      [ -s "$$NVM_DIR/nvm.sh" ] && \. "$$NVM_DIR/nvm.sh"  # This loads nvm
      [ -s "$$NVM_DIR/bash_completion" ] && \. "$$NVM_DIR/bash_completion"  # This loads nvm bash_completion

      export PATH=$$PATH:/home/kasm-user/bin:/home/kasm-user/.dotnet/tools
      export DOTNET_ROOT=/mnt/user-data/!apps/dotnet
      
      $$STARTUP_EXEC
